// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement()) @map("id")
  userId       String    @unique                       @map("email")
  password     String                                  @map("password")  
  name         String                                  @map("name")
  age          Int                                     @map("age")
  refreshToken String?                                 @map("refreshToken")
  createdAt    DateTime  @default(now())               @map("createdAt")
  updatedAt    DateTime  @updatedAt                    @map("updatedAt")
  
  characters   Character[]

  @@map("User")
}

model Character {
  id            Int       @id @default(autoincrement()) @map("id")
  name          String    @unique                       @map("name")
  health        Int       @default(500)                 @map("health")
  money         Int       @default(10000)               @map("money")
  userId        Int                                     @map("userId")
  STR           Int       @default(10)                  @map("STR")
  DEX           Int       @default(10)                  @map("DEX")
  INT           Int       @default(10)                  @map("INT")
  LUK           Int       @default(10)                  @map("LUK")
  ATK           Int       @default(10)                  @map("ATK")
  EXP           Int       @default(0)                   @map("EXP")

  user          User      @relation(fields: [userId], references: [id])

  inventory     Inventory[]
  equippedItems CharacterItem[]

  @@map("Character")
}

model Item {
  id            Int     @id @default(autoincrement()) @map("id")
  itemCode      Int     @unique                       @map("itemCode")
  name          String                                @map("name")
  ItemType      String                                @map("ItemType")
  stats         Json                                  @map("stats")
  price         Int     @default(0)                   @map("price")

  @@map("Item")
}

model Inventory {
  id          Int       @id @default(autoincrement()) @map("id")
  characterId Int                                     @map("characterId")
  items       Json                                    @map("items") 

  character   Character @relation(fields: [characterId], references: [id])

  @@map("Inventory")
}

model CharacterItem {
  id          Int       @id @default(autoincrement()) @map("id")
  characterId Int                                     @map("characterId")
  equippedItems Json                                 @map("equippedItems")

  character   Character @relation(fields: [characterId], references: [id])
  
  @@map("CharacterItem")
}
